from aiogram import types, Dispatcher
from createbot import bot
from db.sql_db import sql_add_command
from keyboards import client_button, phonenumb_button
#from aiogram.types import ReplyKeyboardRemove
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ContentType
from datetime import datetime


n = datetime.now()

#–§–æ—Ä–º—É—î–º–æ —Å–∫–ª–∞–¥–æ–≤—ñ –º–∞—à–∏–Ω–∏ —Å—Ç–∞–Ω—ñ–≤
class FSMAdmin(StatesGroup):
    pib = State()
    opys = State()
    photovideo = State()
    address = State()
    phonenumb = State()


#–ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç
async def start_bot(message: types.Message):
    await bot.send_message(message.from_user.id, '–í–∞—Å –≤—ñ—Ç–∞—î –°–≤—è—Ç–æ—à–∏–Ω—Å—å–∫–∏–π –ü–æ–º—ñ—á–Ω–∏–∫ üíö\n–ù–∞—à –ë–æ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –∑–≤‚Äô—è–∑–∫—É –º—ñ–∂ –í–∞–º–∏ —Ç–∞ –î–µ—Ä–∂–∞–≤–Ω–∏–º–∏ —á–∏ –ö–æ–º—É–Ω–∞–ª—å–Ω–∏–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏.',
    reply_markup=client_button)

#–õ–æ–≤–∏–º–æ –ø–µ—Ä—à—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å
async def start_skarga(message: types.Message):
    await FSMAdmin.pib.set()
    await message.reply('üßëüèª‚Äçüíª –ü—ñ–¥–∫–∞–∂—ñ—Ç—å, —è–∫ –¥–æ –í–∞—Å –∑–≤–µ—Ä—Ç–∞—Ç–∏—Å—è (–±–∞–∂–∞–Ω–æ —É —Ñ–æ—Ä–º–∞—Ç—ñ –ü–Ü–ë):')

#–õ–æ–≤–∏–º–æ –¥—Ä—É–≥—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å
async def get_pib(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['pib'] = message.text
    await FSMAdmin.next()
    await message.reply('üôãüèª‚Äç‚ôÇÔ∏è –û–ø–∏—à—ñ—Ç—å –ø—Ä–æ–±–ª–µ–º—É –∑ —è–∫–æ—é –í–∏ –∑–≤–µ—Ä—Ç–∞—î—Ç–µ—Å—å:')

#–õ–æ–≤–∏–º–æ —Ç—Ä–µ—Ç—é –≤—ñ–¥–ø–æ–≤—ñ–¥—å
async def get_problem(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['opys_problemy'] = message.text
    await FSMAdmin.next()
    await message.reply('üì∑ –î–æ–¥–∞–π—Ç–µ —Ñ–æ—Ç–æ/–≤—ñ–¥–µ–æ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏, —â–æ–± –¥–æ–ø–æ–≤–Ω–∏—Ç–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è:')

#–õ–æ–≤–∏–º–æ —á–µ—Ç–≤–µ—Ä—Ç—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å
async def get_photovideo(message: types.Message, state: FSMContext):
    try:
        async with state.proxy() as data:
            if message.content_type == 'photo':
                data['photo'] = message.photo[0].file_id
            elif message.content_type == 'video':
                data['video'] = message.video.file_id
            else:
                raise AttributeError("No photo or video")
        await FSMAdmin.next()
        await message.reply('üß≠ –í–≤–µ–¥—ñ—Ç—å –∞–¥—Ä–µ—Å—É –ø—Ä–æ–±–ª–µ–º–∏:')
    except AttributeError:
        await message.reply("–ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ –∞–±–æ –≤—ñ–¥–µ–æ!")

#–õ–æ–≤–∏–º–æ –ø'—è—Ç—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å
async def get_address(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['address'] = message.text
    await FSMAdmin.next()
    await message.reply('üì≤ –ù–∞–¥—ñ—à–ª—ñ—Ç—å –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É, –∑–∞–¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç—É –∑ –í–∞–º–∏:', reply_markup=phonenumb_button)

#–õ–æ–≤–∏–º–æ —à–æ—Å—Ç—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –π –∑–∞–≤–µ—Ä—à—É—î–º–æ –º–∞—à–∏–Ω—É —Å—Ç–∞–Ω—ñ–≤
async def get_phonenumber(message: types.Message, state: FSMContext):
    try:
        async with state.proxy() as data:
            data['phonenumber'] = message.contact.phone_number
            data['time'] = str(f'{n.day}.{n.month}.{n.year}---{n.hour}:{n.minute}:{n.second}')
        await sql_add_command(state)
        await message.reply('üíö –î—è–∫—É—î–º–æ –∑–∞ –í–∞—à–µ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è, –æ—á—ñ–∫—É–π—Ç–µ –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –ø–æ –≤–∞—à–æ–º—É –∑–≤–µ—Ä–Ω–µ–Ω–Ω—é –≤ –Ω–∞–π–±–ª–∏–∂—á–∏–π —á–∞—Å).\n–ì–∞—Ä–Ω–æ–≥–æ –¥–Ω—è üôãüèª‚Äç‚ôÇÔ∏è', reply_markup=client_button)
        await state.finish()
    except AttributeError:
        await message.reply("–ù–∞–¥—ñ—à–ª—ñ—Ç—å —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∑–Ω–∏–∑—É üíö")

#–í–∏—Ö—ñ–¥ –∑ –º–∞—à–∏–Ω–∏ —Å—Ç–∞–Ω—É
async def cancel_handler(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        return
    await state.finish()
    await message.reply('–ù–∞–¥—ñ—Å–ª–∞–Ω–Ω—è —Å–∫–∞—Ä–≥–∏ –≤—ñ–¥–º—ñ–Ω–µ–Ω–æ.')

#"–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è" –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (—Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤)
def rhc(dp: Dispatcher):
    dp.register_message_handler(start_bot, commands=['start', 'help'])
    dp.register_message_handler(start_skarga, commands=['–ù–∞–¥—ñ—Å–ª–∞—Ç–∏_—Å–∫–∞—Ä–≥—É'], state=None)
    dp.register_message_handler(get_pib, state=FSMAdmin.pib)
    dp.register_message_handler(get_problem, state=FSMAdmin.opys)
    dp.register_message_handler(get_photovideo, content_types=['photo'], state=FSMAdmin.photovideo)
    dp.register_message_handler(get_photovideo, content_types=['video'], state=FSMAdmin.photovideo)
    dp.register_message_handler(get_photovideo, state=FSMAdmin.photovideo)
    dp.register_message_handler(get_address, state=FSMAdmin.address)
    dp.register_message_handler(get_phonenumber, content_types=ContentType.CONTACT, state=FSMAdmin.phonenumb)
    dp.register_message_handler(get_phonenumber, state=FSMAdmin.phonenumb)
    dp.register_message_handler(cancel_handler, state="*", commands='–í—ñ–¥–º—ñ–Ω–∞')
    dp.register_message_handler(cancel_handler, Text(equals='–≤—ñ–¥–º—ñ–Ω–∞', ignore_case=True), state="*")

    